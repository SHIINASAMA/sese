stages:
  - prebuild
  - test
  - deploy

prebuild:
  stage: prebuild
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker login reg.mikumikumi.xyz
    - docker build -t reg.mikumikumi.xyz/libsese/sese-core .
    - docker push reg.mikumikumi.xyz/libsese/sese-core

test:
  stage: test
  image: reg.mikumikumi.xyz/libsese/sese-core
  script:
    # config cmake project
    - cmake -Bbuild/linux-release -DCMAKE_BUILD_TYPE=Release -DSESE_BUILD_TEST=ON -DSESE_USE_NATIVE_MANAGER=ON -DSESE_DB_USE_MARIADB=ON -DSESE_DB_USE_POSTGRES=ON -DCMAKE_CXX_FLAGS="--coverage -fprofile-update=atomic"
    - cmake --build build/linux-release -- -j 2
    # restore sqlite database
    - sqlite3 build/db_test.db < docker/sqlite_dump.sql
    # setup service
    - docker-compose up -d
    # run tests
    - ./build/linux-release/test/AllTestsInMain
    # shutdown service
    - docker-compose down
    # make coverage reposts
    - mkdir -p build/coverage
    - gcovr --config gcovr-cobertura.cfg
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    when: on_success
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage/coverage.xml

pages:
  stage: deploy
  script:
    - apt update -q && apt install doxygen -yq
    - doxygen
    - mv -r build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH