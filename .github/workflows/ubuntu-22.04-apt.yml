name: ubuntu-apt

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: dependencygraph

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies(pip)
        run: pip install -r ${{ github.workspace }}/requirements.txt

      - name: Check deps
        working-directory: ${{ github.workspace }}
        run: sudo ./scripts/install_ubuntu_deps.sh

      - name: Configure CMake
        working-directory: ${{ github.workspace }}
        run: cmake -DCMAKE_BUILD_TYPE=Release -DSESE_BUILD_TEST=ON -DSESE_USE_ARCHIVE=ON -DSESE_USE_NATIVE_MANAGER=ON -DSESE_DB_USE_MARIADB=ON -DSESE_DB_USE_POSTGRES=ON -Bbuild

      - name: Build
        working-directory: ${{ github.workspace }}
        run: cmake --build build -- -j 2

      - name: Test
        working-directory: ${{ github.workspace }}
        run: build/test/AllTestsInMain --gtest_filter=-TestMaria*:TestPostgres*:TestSqlite*

  test-coverage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'

      - name: Install Dependencies(pip)
        run: pip install -r ${{ github.workspace }}/requirements.txt

      - name: Check deps
        working-directory: ${{ github.workspace }}
        run: sudo ./scripts/install_ubuntu_deps.sh

      - name: Configure CMake
        working-directory: ${{ github.workspace }}
        run: cmake -DCMAKE_BUILD_TYPE=Release -DSESE_BUILD_TEST=ON -DSESE_USE_NATIVE_MANAGER=ON -DSESE_USE_ARCHIVE=ON -Bbuild-coverage -DCMAKE_CXX_FLAGS="--coverage -fprofile-update=atomic"

      - name: Build
        working-directory: ${{ github.workspace }}
        run: cmake --build build-coverage -- -j 2

      - name: Test
        working-directory: ${{ github.workspace }}
        run: build-coverage/test/AllTestsInMain --gtest_filter=-TestMaria*:TestPostgres*:TestSqlite*

      - name: Coverage
        working-directory: ${{ github.workspace }}
        run: python3 scripts/make_coverage_report.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ github.workspace }}/coverage

