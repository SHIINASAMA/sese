name: ubuntu-apt

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: dependencygraph

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies(pip-ci)
        run: pip install -r ${{ github.workspace }}/ci/requirements.txt

      - name: Install Dependencies(pip-scripts)
        run: pip install -r ${{ github.workspace }}/scripts/requirements.txt

      - name: Check deps
        working-directory: ${{ github.workspace }}
        run: sudo apt build-dep .

      - name: Configure CMake
        working-directory: ${{ github.workspace }}
        run: cmake -DCMAKE_BUILD_TYPE=Release -DSESE_BUILD_TEST=ON -Bbuild

      - name: Build
        working-directory: ${{ github.workspace }}
        run: python3 -m ci.unix_build

      - name: Test
        working-directory: ${{ github.workspace }}
        run: python3 -m ci.unix_test

  test-coverage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies(pip-ci)
        run: pip install -r ${{ github.workspace }}/ci/requirements.txt

      - name: Install Dependencies(pip-scripts)
        run: pip install -r ${{ github.workspace }}/scripts/requirements.txt

      - name: Check deps
        working-directory: ${{ github.workspace }}
        run: sudo apt build-dep .

      - name: Configure CMake
        working-directory: ${{ github.workspace }}
        run: cmake -DCMAKE_BUILD_TYPE=Release -DSESE_BUILD_TEST=ON -Bbuild-coverage -DCMAKE_CXX_FLAGS="--coverage -fprofile-update=atomic"

      - name: Build
        working-directory: ${{ github.workspace }}
        run: python3 -m ci.unix_build_coverage

      - name: Test
        working-directory: ${{ github.workspace }}
        run: python3 -m ci.unix_test_coverage

      - name: Coverage
        working-directory: ${{ github.workspace }}
        run: python3 -m ci.make_coverage_report

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ github.workspace }}/coverage

