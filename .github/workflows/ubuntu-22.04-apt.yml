name: ubuntu-apt

on:
  pull_request:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: dependencygraph

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'

      - name: Install Dependencies(pip)
        run: pip install -r ${{ github.workspace }}/requirements.txt

      - name: Check deps
        working-directory: ${{ github.workspace }}
        run: sudo ./scripts/install_ubuntu_deps.sh

      - name: Configure CMake
        working-directory: ${{ github.workspace }}
        run: >
          cmake
          -DCMAKE_BUILD_TYPE=Release
          -DSESE_BUILD_TEST=ON
          -DSESE_USE_NATIVE_MANAGER=ON
          -DSESE_USE_ARCHIVE=ON
          -DSESE_DB_USE_MARIADB=ON
          -DSESE_DB_USE_POSTGRES=ON
          -DCMAKE_CXX_FLAGS="--coverage -fprofile-update=atomic"
          -Bbuild

      - name: Build
        working-directory: ${{ github.workspace }}
        run: cmake --build build -- -j 2

      - name: Run Sqlite Scripts
        working-directory: ${{ github.workspace }}
        run: |
          sqlite3 build/db_test.db < scripts/sqlite_dump.sql

      - name: Services up
        working-directory: ${{ github.workspace }}
        run: |
          sudo docker-compose up -d mariadb postgresql
          sleep 5

      - name: Test
        working-directory: ${{ github.workspace }}
        run: build/test/AllTestsInMain

      - name: Services down
        working-directory: ${{ github.workspace }}
        run: sudo docker-compose down

      - name: Coverage
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p build/coverage/html
          gcovr --config gcovr-html.cfg
          gcovr --config gcovr-cobertura.cfg

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/coverage/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ github.workspace }}/build/coverage

