stages:
  - build
  - test
  - deploy

docker_build:
  stage: build
  image: reg.mikumikumi.xyz/base/kaniko-builder
  variables:
    BUILD_CONTEXT: .
    BUILD_DOCKERFILE: docker/alpine-x64.dockerfile
  script:
    - build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - 'docker/alpine-x64.dockerfile'
        - 'requirements.txt'

docker_build_manual:
  stage: build
  image: reg.mikumikumi.xyz/base/kaniko-builder
  when: manual
  variables:
    BUILD_CONTEXT: .
    BUILD_DOCKERFILE: docker/alpine-x64.dockerfile
  script:
    - build

gtest:
  stage: test
  services:
    - mysql:latest
    - postgres:latest
  variables:
    MYSQL_ROOT_PASSWORD: libsese
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: libsese
    POSTGRES_HOST_AUTH_METHOD: trust
    PGPASSWORD: $POSTGRES_PASSWORD
    VCPKG_DEFAULT_BINARY_CACHE: $CI_PROJECT_DIR/vcpkg-archives
    ZIC: /usr/sbin/zic
  image: reg.mikumikumi.xyz/libsese/sese-core:latest
  allow_failure: true
  when: always
  cache:
    key:
      files:
        - vcpkg.json
    paths:
      - vcpkg-archives
  script:
    - mkdir -p vcpkg-archives
    # config cmake project
    - cmake
      -G Ninja
      -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
      -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja
      -DCMAKE_C_COMPILER=/usr/bin/gcc
      -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -Bbuild/linux-release
      -DCMAKE_BUILD_TYPE=Release
      -DSESE_BUILD_TEST=ON
      -DSESE_USE_ARCHIVE=ON
      -DSESE_DB_USE_SQLITE=ON
      -DSESE_DB_USE_MARIADB=ON
      -DSESE_DB_USE_POSTGRES=ON
      -DSESE_REPLACE_EXECINFO=ON
      -DSESE_RESOURCE=ON
      -DSESE_DB_SQLITE_CONNECTION_STRING="/tmp/db_test.db"
      -DSESE_DB_MYSQL_CONNECTION_STRING="host=mysql\;port=3306\;user=root\;pwd=libsese\;db=db_test\;"
      -DSESE_DB_PSQL_CONNECTION_STRING="host=postgres\;port=5432\;user=postgres\;pwd=libsese\;db=db_test\;"
      -DCMAKE_CXX_FLAGS="--coverage -fprofile-update=atomic"
    - cmake --build build/linux-release -- -j 2
    # init database
    - mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql --port=3306 < ./scripts/mysql_dump.sql
    - psql -U postgres -d postgres -h postgres -p 5432 -f ./scripts/postgres_dump.sql
    - sqlite3 /tmp/db_test.db < ./scripts/sqlite_dump.sql
    # run tests
    - build/linux-release/sese/test/AllTestsInMain --gtest_output="xml:build/test_report.xml"
    - sed -i 's|/builds/libsese/sese-core||g' build/test_report.xml
    # make coverage reposts
    - mkdir -p build/coverage/html
    - gcovr --gcov-executable="/usr/lib/llvm17/bin/llvm-cov gcov"
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}"
    paths:
      - build/coverage/html
    reports:
      junit: build/test_report.xml
      coverage_report:
        coverage_format: cobertura
        path: build/coverage/coverage.xml
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - 'sese/**/*'
        - 'CMakeLists.txt'

pages:
  stage: deploy
  image: $CI_REGISTRY/base/roxy
  variables:
    PROJECT_PATH: /builds/libsese/sese-core
    DOXYFILE: docs/Doxyfile
    RESOURCE_FOLDER: static
    OUTPUT_FOLDER: build/html
  script:
    - /usr/local/bin/entrypoint.sh
    - python3 scripts/insert_meta.py --html_file=build/html/index.html --meta_file=docs/Meta.txt
    - mv build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - 'docs/Doxyfile'
        - 'sese/**'
        - 'static/**'
        - 'README.md'